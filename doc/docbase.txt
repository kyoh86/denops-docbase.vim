                                                                 *docbase.txt*
A Vim plugin as a client for the DocBase
                                                *docbase* *denops-docbase.txt*

Author: kyoh86 <me@kyoh86.dev>
License: MIT License


==============================================================================
                                                            *docbase-contents*
Contents ~

Install                   |docbase-install|
Setup                     |docbase-setup|
Special buffers           |docbase-special-buffers|
Function                  |docbase-function|
Commands                  |docbase-commands|
Keymaps                   |docbase-keymaps|
Denops commands           |docbase-denops-commands|


==============================================================================
                                                             *docbase-install*
Install ~

You need to install the following dependencies.

* vim-denops/denops.vim https://github.com/vim-denops/denops.vim
* GNU `diff` command (it is in GNU diffutils)
* GNU `patch` command

==============================================================================
                                                               *docbase-setup*
Setup ~

You can set up the default commands and keymaps using the functions below.

- |docbase#setup#maps()|
- |docbase#setup#commands()|

If you want to create commands or keymaps, do not call these functions, and
instead, customize them as you see fit.

==============================================================================
                                                     *docbase-special-buffers*
Special buffers ~

denops-docbase.vim has some special buffers for specific purposes.

                                 *docbase-buffer-teams-list* *docbase://teams*
Teams list view
	Buffer name: `docbase://teams-list`

	Shows your teams (domain) list.
	You can select a domain and open it with buffer action.

            *docbase-buffer-posts-list* *docbase://posts-list;domain={domain}*
Posts list view
	Buffer name: `docbase://posts-list;domain={domain}`

	Shows your posts in the team (domain).
	You can select a post and open it with buffer action.

       *docbase-buffer-post* *docbase://post;domain={domain}&postId={post_id}*
Post editor
	Buffer name: `docbase://post;domain={domain}&postId={post_id}`

	Shows a post. You can edit it and save it in DocBase.

                *docbase-buffer-new-post* *docbase://new-post;domain={domain}*
New post editor
	Buffer name: `docbase://new-post;domain={domain}`

	Creates a new post. You can edit it and save it in DocBase.

                                       *docbase-buffer-new-post-with-template*
                       *docbase://new-post;domain={domain}&template={post_id}*
New post with template
	Buffer name: `docbase://new-post;domain={domain}&template={post_id}`

	Creates a new post from a template. You can create a new post from a
	template, edit it, and save it in DocBase.


==============================================================================
                                                            *docbase-function*
Function ~

                                                             *docbase#login()*
docbase#login()

	Login to the DocBase. It will request your team's domain and a token
	to access DocBase API.

	- Domain : If you want to access `kyoh86.docbase.io` => `"kyoh86"`
	- Token for the DocBase. See https://help.docbase.io/posts/45703

                                                    *docbase#setup#commands()*
docbase#setup#commands()

	Prepare default commands.

                                                        *docbase#setup#maps()*
docbase#setup#maps()

	Prepare default keymaps.


                                                    *docbase#open#teams_list()*
docbase#open#teams_list([{open_option}])
	Open the DocBase teams list view.

	{open_option}  The options to open new buffer.
	See |docbase-open_option|.

                                                   *docbase#open#posts_list()*
docbase#open#posts_list({domain} [, {open_option}])
	Open DocBase posts list view for the domain.

	{domain} (string):
		Your team domain in the DocBase.
		e.g.: `kyoh86.docbase.io` => `"kyoh86"`

	{open_option}  The options to open new buffer.
	See |docbase-open_option|.

                                                         *docbase#open#post()*
docbase#open#post({domain}, {post_id} [, {open_option}])
	Open DocBase post editor.

	{domain} (string):
		Your team domain in the DocBase.
		e.g.: `kyoh86.docbase.io` => `"kyoh86"`

	{post_id} (number):
		An ID for the post.
		e.g.: `kyoh86.docbase.io/posts/1234` => `1234`

	{open_option}  The options to open new buffer.
	See |docbase-open_option|.

                                                     *docbase#open#new_post()*
docbase#open#new_post({domain} [, {open_option}])

	{domain} (string):
		Your team domain in the DocBase.
		e.g.: `kyoh86.docbase.io` => `"kyoh86"`

	{open_option}  The options to open new buffer.
	See |docbase-open_option|.

                                                      *docbase#list#domains()*
docbase#list#domains()
	Get domain list. Returns string[].
	You can make a finder source with this, for tools like telescope.nvim,
	ctrlp.vim, fzf.vim, etc.

                                                        *docbase#list#posts()*
docbase#list#posts({domain})
	Get post list. Returns Post[].
	You can make a finder source with this, for tools like telescope.nvim,
	ctrlp.vim, fzf.vim, etc.

                                      *docbase#buffer_action#teams_list#open()*
docbase#buffer_action#teams_list#open({lnum} [, {open_option}])
	In the DocBase teams list view, it will open the DocBase posts list 
	view for the domain at the line.

	{lnum} (number):
		A line number to open.
		You can use `line(".")` to specify the cursor line.
	
	{open_option}  The options to open new buffer.
	See |docbase-open_option|.

                                      *docbase#buffer_action#posts_list#open()*
docbase#buffer_action#posts_list#open({lnum} [, {open_option}])
	In the DocBase posts list view, it will open the DocBase post editor
	for the post at the line.

	{lnum} (number):
		A line number to open.
		You can use `line(".")` to specify the cursor line.
	
	{open_option}  The options to open new buffer.
	See |docbase-open_option|.

                                      *docbase#buffer_action#posts_list#prev()*
docbase#buffer_action#posts_list#prev()
	In the DocBase posts list viewer, it will open previous page.

                                      *docbase#buffer_action#posts_list#next()*
docbase#buffer_action#posts_list#next()
	In the DocBase posts list viewer, it will open next page.


==============================================================================
                                                         *docbase-open_option*
Open option ~

There are some functions that accept the {open_option}, which changes the
behavior when opening a new buffer, similar to |<mods>|.
{open_option} is a dictionary having a two entries: {split} and {reuse}.

                                                   *docbase-open_option:split*
	split (string)
		It changes which window shows a new buffer.
		Supported values are "none", "split-top", "split-above",
		"split-below", "split-bottom", "split-leftmost", "split-left",
		"split-right", "split-rightmost", and "split-tab".
		If it is "none" or default (""), the buffer will be shown in
		current window (without split).
	reuse (boolean)
		If it is true, and the buffer is already open in a window,
		focus on that window.

                                                   *docbase-open_option:reuse*


==============================================================================
                                                            *docbase-commands*
Commands ~

If you call denops#setup#commands(), it creates default commands below.

*:DocbaseLogin*
	Login to the DocBase. It will request you a domain of your team and a
	token to access DocBase API.

	- Domain : If you want to access `kyoh86.docbase.io` => `"kyoh86"`
	- Token for the DocBase. See https://help.docbase.io/posts/45703

*:Docbase*
*:DocbaseOpenTeamsList*
	Open DocBase teams list view.

*:DocbaseOpenPostsList* --domain={domain}
	Open DocBase posts list view for the domain.

	{domain} (string):
		Your team domain in the DocBase.
		e.g.: `kyoh86.docbase.io` => `"kyoh86"`

*:DocbaseOpenPost* --domain={domain} --post-id={post_id}
	Open post editor.

	{domain} (string):
		Your team domain in the DocBase.
		e.g.: `kyoh86.docbase.io` => `"kyoh86"`

	{post_id} (number):
		An ID for the post.
		e.g.: `kyoh86.docbase.io/posts/1234` => `1234`

==============================================================================
                                                             *docbase-keymaps*
Keymaps ~

If you call |docbase#setup#maps()|, you can use keys that described as
"default:" below.

*<Plug>(docbase-buffer-action-teams-list-open)* default: <CR>
*<Plug>(docbase-buffer-action-teams-list-open-new)* default: <C-h>
*<Plug>(docbase-buffer-action-teams-list-open-vnew)* default: <C-v>
*<Plug>(docbase-buffer-action-teams-list-open-tabedit)* default: <C-t>
	Open DocBase posts list view for the domain under the cursor.

*<Plug>(docbase-buffer-action-posts-list-open)* default: <CR>
*<Plug>(docbase-buffer-action-posts-list-open-new)* default: <C-h>
*<Plug>(docbase-buffer-action-posts-list-open-vnew)* default: <C-v>
*<Plug>(docbase-buffer-action-posts-list-open-tabedit)* default: <C-t>
	Open DocBase post editor for the post under the cursor.

*<Plug>(docbase-buffer-action-posts-list-prev)*
	default: <C-k>
	Open the previous page.

*<Plug>(docbase-buffer-action-posts-list-next)*
	default: <C-j>
	Open the next page.


==============================================================================
" vim:tw=78:ts=8:sw=8:ft=help:norl:noet:fen:
