                                                                 *docbase.txt*
A Vim plugin as a client for the DocBase
                                                *docbase* *denops-docbase.txt*

Author: kyoh86 <me@kyoh86.dev>
License: MIT License


==============================================================================
                                                            *docbase-contents*
Contents ~

Install           |docbase-install|
Setup             |docbase-setup|
Special buffers   |docbase-special-buffers|
Function          |docbase-function|
Commands          |docbase-commands|
Keymaps           |docbase-keymaps|
Denops commands   |docbase-denops-commands|


==============================================================================
                                                             *docbase-install*
Install ~

You need to install *denops.vim* as a dependency.

* vim-denops/denops.vim https://github.com/vim-denops/denops.vim

==============================================================================
                                                               *docbase-setup*
Setup ~

You can setup default commands and keymaps by functions below.

- |docbase#setup#maps()|
- |docbase#setup#commands()|

If you want to create command or map in your custom, don't call them and
customize as you see fit.

==============================================================================
                                                     *docbase-special-buffers*
Special buffers ~

denops-docbase.vim has some special buffers for each special name.

                                 *docbase-buffer-teams-list* *docbase://teams*
Teams list view
	Buffer name: `docbase://teams`

	Shows your teams (domain) list.
	You can select a domain and open it with buffer action.

                  *docbase-buffer-teams-list* *docbase://teams/{domain}/posts*
Posts list view
	Buffer name: `docbase://teams/{domain}/posts`

	Shows your posts in the team (domain).
	You can select a post and open it with buffer action.

              *docbase-buffer-post* *docbase://teams/{domain}/posts/{post_id}*
Post editor
	Buffer name: `docbase://teams/{domain}/posts/{post_id}`

	Shows a post. You can edit it and save it in DocBase.

                *docbase-buffer-new-post* *docbase://teams/{domain}/posts/new*
New post editor
	Buffer name: `docbase://teams/{domain}/posts/new`

	Creates a new post. You can edit it and save it in DocBase.

==============================================================================
                                                            *docbase-function*
Function ~

                                                             *docbase#login()*
docbase#login()

	Login to the DocBase. It will request you a domain of your team and a
	token to access DocBase API.

	- Domain : If you want to access `kyoh86.docbase.io` => `"kyoh86"`
	- Token for the DocBase. See https://help.docbase.io/posts/45703

                                                    *docbase#setup#commands()*
docbase#setup#commands()

	Prepare default commands.

                                                        *docbase#setup#maps()*
docbase#setup#maps()

	Prepare default keymaps.


                                                    *docbase#open#teams_list()*
docbase#open#teams_list([{opener}])
	Open the DocBase teams list view.

	{opener} ("edit"|"new"|"vnew"|"tabnew"):
		A command to open the teams list view.

                                                   *docbase#open#posts_list()*
docbase#open#posts_list(domain, opener="edit")
	Open DocBase posts list view for the domain.

	{domain} (string):
		Your team domain in the DocBase.
		e.g.: `kyoh86.docbase.io` => `"kyoh86"`

	{opener} ("edit"|"new"|"vnew"|"tabnew"):
		A command to open the teams list view.

                                                         *docbase#open#post()*
docbase#open#post(domain, post_id, opener="edit")
	Open DocBase post editor.

	{domain} (string):
		Your team domain in the DocBase.
		e.g.: `kyoh86.docbase.io` => `"kyoh86"`

	{post_id} (number):
		An ID for the post.
		e.g.: `kyoh86.docbase.io/posts/1234` => `1234`

	{opener} ("edit"|"new"|"vnew"|"tabnew"):
		A command to open the teams list view.

                                                     *docbase#open#new_post()*
docbase#open#new_post(domain, opener="edit")

	{domain} (string):
		Your team domain in the DocBase.
		e.g.: `kyoh86.docbase.io` => `"kyoh86"`

	{opener} ("edit"|"new"|"vnew"|"tabnew"):
		A command to open the teams list view.

                                                      *docbase#list#domains()*
docbase#list#domains()
	Get domain list. Returns string[].
	You can make a finder source with this, for tools like telescope.nvim,
	ctrlp.vim, fzf.vim, etc.

                                                        *docbase#list#posts()*
docbase#list#posts(domain)
	Get post list. Returns Post[].
	You can make a finder source with this, for tools like telescope.nvim,
	ctrlp.vim, fzf.vim, etc.

                                      *docbase#buffer_action#teams_list#open()*
docbase#buffer_action#teams_list#open({lnum}[, {opener}])
	In the DocBase teams list view, it will open the DocBase posts list 
	view for the domain at the line.

	{lnum} (number):
		A line number to open.
		You can use `line(".")` to specify the cursor line.
	
	{opener} ("edit"|"new"|"vnew"|"tabnew"):
		A command to open the posts list view.

		default: "edit"

                                      *docbase#buffer_action#posts_list#open()*
docbase#buffer_action#posts_list#open({lnum}[, {opener}])
	In the DocBase posts list view, it will open the DocBase post editor
	for the post at the line.

	{lnum} (number):
		A line number to open.
		You can use `line(".")` to specify the cursor line.
	
	{opener} ("edit"|"new"|"vnew"|"tabnew"):
		A command to open the post buffer.

		default: "edit"

                                      *docbase#buffer_action#posts_list#prev()*
docbase#buffer_action#posts_list#prev()
	In the DocBase posts list viewer, it will open previous page.

                                      *docbase#buffer_action#posts_list#next()*
docbase#buffer_action#posts_list#next()
	In the DocBase posts list viewer, it will open next page.


==============================================================================
                                                            *docbase-commands*
Commands ~

If you call denops#setup#commands(), it creates default commands below.

*:DocbaseLogin*
	Login to the DocBase. It will request you a domain of your team and a
	token to access DocBase API.

	- Domain : If you want to access `kyoh86.docbase.io` => `"kyoh86"`
	- Token for the DocBase. See https://help.docbase.io/posts/45703

*:Docbase*
*:DocbaseTeamsList*
	Open DocBase teams list view.

*:DocbasePostsList* {domain}
	Open DocBase posts list view for the domain.

	{domain} (string):
		Your team domain in the DocBase.
		e.g.: `kyoh86.docbase.io` => `"kyoh86"`

*:DocbasePost* {domain} {post_id}
	Open post editor.

	{domain} (string):
		Your team domain in the DocBase.
		e.g.: `kyoh86.docbase.io` => `"kyoh86"`

	{post_id} (number):
		An ID for the post.
		e.g.: `kyoh86.docbase.io/posts/1234` => `1234`

And in DocBase Teams list view, you can use commands below.

*:DocbaseOpenTeam*
*:DocbaseOpenTeamNew*
*:DocbaseOpenTeamVnew*
*:DocbaseOpenTeamTabedit*
	Open DocBase posts list view for the domain under the cursor.

And in DocBase posts list view, you can use commands below.

*:DocbaseOpenPost*
*:DocbaseOpenPostNew*
*:DocbaseOpenPostVnew*
*:DocbaseOpenPostTabedit*
	Open DocBase post editor for the post under the cursor.

*:DocbasePrevPage*
	Open previous page.

*:DocbaseNextPage*
	Open next page.

==============================================================================
                                                             *docbase-keymaps*
Keymaps ~

If you call |docbase#setup#maps()|, you can use keys that described as
"default:" below.

*<Plug>(docbase-buffer-action-teams-list-open)* default: <CR>
*<Plug>(docbase-buffer-action-teams-list-open-new)* default: <C-h>
*<Plug>(docbase-buffer-action-teams-list-open-vnew)* default: <C-v>
*<Plug>(docbase-buffer-action-teams-list-open-tabedit)* default: <C-t>
	Open DocBase posts list view for the domain under the cursor.

*<Plug>(docbase-buffer-action-posts-list-open)* default: <CR>
*<Plug>(docbase-buffer-action-posts-list-open-new)* default: <C-h>
*<Plug>(docbase-buffer-action-posts-list-open-vnew)* default: <C-v>
*<Plug>(docbase-buffer-action-posts-list-open-tabedit)* default: <C-t>
	Open DocBase post editor for the post under the cursor.

*<Plug>(docbase-buffer-action-posts-list-prev)*
	default: <C-k>
	Open previous page.

*<Plug>(docbase-buffer-action-posts-list-next)*
	default: <C-j>
	Open next page.

==============================================================================
                                                     *docbase-denops-commands*
Denops commands ~

You can call some functions from the denops commands.

                                         *docbase-denops-command-openBuffer()*
openBuffer(
    handler: string,
    props: Record<string, unknown>,
    opener: "edit"|"new"|"vnew"|"tabedit")

	Open new |docbase-special-buffers|.
	{hanlder} is the name of a special buffer.
	"TeamList", "PostList", "Post" and "NewPost" is in the handler.

                                       *docbase-denops-command-bufferAction()*
bufferAction(
    bufnr: number
    actName: string
    params: Record<string, unknown>)

	Notify the action for |docbase-special-buffers|.
	If the buffer has action for the {actName}, process it with {params}.
	See autoload functions docbase#buffer_action#* for example.


                                              *docbase-denops-command-login()*
login()

	Login to the DocBase. It will request you a domain of your team and a
	token to access DocBase API.

	- Domain : If you want to access `kyoh86.docbase.io` => `"kyoh86"`
	- Token for the DocBase. See https://help.docbase.io/posts/45703


                                                      *docbase#list#domains()*
listDomains()
	Get domain list. Returns string[].
	You can make a finder source with this, for tools like telescope.nvim,
	ctrlp.vim, fzf.vim, etc.

                                                        *docbase#list#posts()*
searchPosts(
    domain: string,
    params?: {
        q?: string,
	page?: number,
	per_page?: number})

	Search posts. Returns Post[].
	You can make a finder source with this, for tools like telescope.nvim,
	ctrlp.vim, fzf.vim, etc.

==============================================================================
" vim:tw=78:ts=8:sw=8:ft=help:norl:noet:fen:
